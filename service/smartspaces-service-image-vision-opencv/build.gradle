/*
 * Copyright (C) 2016 Keith M. Hughes
 * Copyright (C) 2013 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the * License for the specific language governing permissions and limitations under
 * the License.
 */

ext {
  serviceFolderName = "smartspaces.service.image.vision.opencv"
  baseServiceBuildFolder = "${project.ext.extrasBuildFolder}/${project.ext.serviceFolderName}"
}

dependencies {
  compile project(':service:smartspaces-service-image-vision')

  extrasCompile files("${project.getProperty('smartspaces.dependencies.home')}/opencv/2.4.7/opencv-247.jar")

  provided "${project.ext.osgiContainerDependency}"

  testCompile 'junit:junit:4.8.2'
  testCompile 'org.mockito:mockito-all:1.9.5'
}

task copyResources(type: Copy) {
  from 'src/main/resources/extras'
  into "${project.ext.baseServiceBuildFolder}"
}

task copyExtrasJars(type: Copy) {
  from configurations.extrasCompile
  into "${project.ext.baseServiceBuildFolder}/jars"
  include '**/*.jar'
}

task copyExtrasNativeLibs(type: Copy) {
  if (new File("${project.getProperty('smartspaces.dependencies.home')}/opencv").exists()) {
    from "${project.getProperty('smartspaces.dependencies.home')}/opencv/2.4.7/native"
    into "${project.ext.baseServiceBuildFolder}/native"
    exclude '**/*.a'
  }
}

task copyExtrasData(type: Copy) {
  if (new File("${project.getProperty('smartspaces.dependencies.home')}/opencv").exists()) {
    from "${project.getProperty('smartspaces.dependencies.home')}/opencv/data"
    into "${project.ext.baseServiceBuildFolder}/data"
  }
}

task copyExtraComponents(dependsOn: [
  copyResources,
  copyExtrasNativeLibs,
  copyExtrasData,
  copyExtrasJars
])

task copyServiceArtifacts(type: Copy, dependsOn: [publishToMavenLocal]) {
  from configurations.archives.allArtifacts.files
  into "${project.ext.baseServiceBuildFolder}"
}

task assembleExtras(dependsOn: [
  copyExtraComponents,
  copyServiceArtifacts
])

publishToMavenLocal.dependsOn.add copyExtraComponents

jar {
  bnd """
    Bundle-SymbolicName: smartspaces.service.image.vision.opencv
    Bundle-Version: ${osgiVersion}

    -exportcontents *
  """
}

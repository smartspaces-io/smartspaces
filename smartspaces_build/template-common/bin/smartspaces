#!/bin/bash

# Figure out, regardless of any symlinks, aliases, etc, where this script
# is located.
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ] ; do SOURCE="$(readlink "$SOURCE")"; done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Get to the directory above the bin directory.
cd $DIR/..

filecontrol() {
  # Shutdown Smart Spaces nicely
  mkdir -p run/control
  touch run/control/"$1"

  exit 0
}

harshShutdown() {
  # Shutdown Smart Spaces very harshly
  kill -9 `cat run/smartspaces.pid`
  rm run/smartspaces.pid

  exit 0
}

run() {
  while [ "${1}" != "" ]; do
    case ${1} in
      'debug')
        if [ "x${JAVA_DEBUG_OPTS}" = "x" ]; then
          JAVA_DEBUG_OPTS="${DEFAULT_JAVA_DEBUG_OPTS}"
        fi
        JAVA_OPTS="${JAVA_DEBUG_OPTS} ${JAVA_OPTS}"
        shift
        ;;
      'shutdown')
        filecontrol "shutdown" 
        ;;
      'harshshutdown')
        harshShutdown
        ;;
      'hardrestart')
        filecontrol "restart-hard"
        ;;
      'softrestart')
        filecontrol "restart-soft"
        ;;
      'server')
        OPTS="--noshell"
        shift
        ;;
      'daemon')
        OPTS="--noshell"
        DAEMON="true"
        EXEC="exec"
        shift
        ;;
      *)
        break
        ;;
    esac
  done


  # Change the tab title.
  if [[ "${DAEMON}" != "true" ]]; then
    PS1=
    printf "\033]0;SS: [@SMARTSPACES_CONTAINER_TYPE@]\007"
  fi

  # Append any additional command-line arguments to pass through to the SS runtime.
  SMARTSPACES_MAIN_ARGS+=" $@"

  CONTAINER_TYPE=@SMARTSPACES_CONTAINER_TYPE@

  while true; do
    EXTRAARGS=
    # Read user configuration file, if present.
    RCFILE=$HOME/.smartspaces.rc
    if [ -f $RCFILE ]; then
      echo Reading config from $RCFILE...
      source $RCFILE
    fi

    CONTAINERARGS=./config/environment/container.args
    if [ -f $CONTAINERARGS ]; then
      CONTAINERARGS_CONTENTS=`cat ${CONTAINERARGS}`
      EXTRAARGS="${EXTRAARGS} ${CONTAINERARGS_CONTENTS}"
    fi

    LOCALENVIRONMENTRC=./config/environment/localenvironment.rc
    if [ -f $LOCALENVIRONMENTRC ]; then
      echo Reading config from $LOCALENVIRONMENTRC...
      source $LOCALENVIRONMENTRC
    fi

    CLASSPATH=smartspaces-launcher-@SMARTSPACES_VERSION@.jar

    if [ -n "$CLASSPATH_ADDITIONAL" ]; then
      CLASSPATH="${CLASSPATH}:${CLASSPATH_ADDITIONAL}"
    fi

    # Default to IPv4 stack, so multicast (used for standalone runner) will work
    EXTRAARGS="-Djava.net.preferIPv4Stack=true ${EXTRAARGS}"

    ${EXEC} java ${EXTRAARGS} -server -cp "${CLASSPATH}" io.smartspaces.launcher.SmartSpacesLauncher ${OPTS} ${SMARTSPACES_MAIN_ARGS} 
  
    SMARTSPACES_RC=$?
    if [ ${SMARTSPACES_DAEMON} ] ; then
      exit ${SMARTSPACES_RC}
    else
      if [ "${SMARTSPACES_RC}" -eq 10 ]; then
        echo "Restarting JVM..."
      else
        exit ${SMARTSPACES_RC}
      fi
    fi
  done
}

main() {
  run "$@"
}

main "$@"

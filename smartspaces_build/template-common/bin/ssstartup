#!/bin/bash -e

# Figure out, regardless of any symlinks, aliases, etc, where this script
# is located.
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ] ; do SOURCE="$(readlink "$SOURCE")"; done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"

# Figure out run mode.
if [ "$1" == "foreground" -o "$1" == "background" -o "$1" == "standalone" ]; then
  RUN_MODE=$1
  shift
else
  RUN_MODE=foreground
fi

# Change the tab title.
if [[ "${RUN_MODE}" != "standalone" ]]; then
  PS1=
  printf "\033]0;IS: [@SMARTSPACES_CONTAINER_TYPE@]\007"
fi

# Append any additional command-line arguments to pass through to the IS runtime.
SMARTSPACES_MAIN_ARGS+=" $@"

# Get to the directory above the bin directory.
cd $DIR/..

CONTAINER_TYPE=@SMARTSPACES_CONTAINER_TYPE@

EXTRAARGS=
# Read user configuration file, if present.
RCFILE=$HOME/.smartspaces.rc
if [ -f $RCFILE ]; then
  echo Reading config from $RCFILE...
  source $RCFILE
fi

CONTAINERARGS=./config/environment/container.args
if [ -f $CONTAINERARGS ]; then
  CONTAINERARGS_CONTENTS=`cat ${CONTAINERARGS}`
  EXTRAARGS="${EXTRAARGS} ${CONTAINERARGS_CONTENTS}"
fi

LOCALENVIRONMENTRC=./config/environment/localenvironment.rc
if [ -f $LOCALENVIRONMENTRC ]; then
  echo Reading config from $LOCALENVIRONMENTRC...
  source $LOCALENVIRONMENTRC
fi

CLASSPATH=smartspaces-launcher-@SMARTSPACES_VERSION@.jar

if [ -n "$CLASSPATH_ADDITIONAL" ]; then
  CLASSPATH="${CLASSPATH}:${CLASSPATH_ADDITIONAL}"
fi

# Default to IPv4 stack, so multicast (used for standalone runner) will work
EXTRAARGS="-Djava.net.preferIPv4Stack=true ${EXTRAARGS}"

# Start up Interactive Spaces
if [[ "${RUN_MODE}" == "foreground" || "${RUN_MODE}" == "standalone" ]]; then
  java ${EXTRAARGS} -server -cp "${CLASSPATH}" io.smartspaces.launcher.InteractiveSpacesLauncher ${SMARTSPACES_MAIN_ARGS}
fi

if [[ "${RUN_MODE}" == "background" ]]; then
  nohup java ${EXTRAARGS} -server -cp "${CLASSPATH}" io.smartspaces.launcher.InteractiveSpacesLauncher --noshell ${SMARTSPACES_MAIN_ARGS} &>/dev/null &
fi

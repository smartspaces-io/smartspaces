/*
 * Copyright (C) 2016 Keith M. Hughes
 * Copyright (C) 2012 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy of
 * the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the * License for the specific language governing permissions and limitations under
 * the License.
 */

apply plugin: 'antlr'

configurations {
	compile {
		extendsFrom = extendsFrom.findAll { it != configurations.antlr }
	}
}

dependencies {
  antlr "org.antlr:antlr4:4.5.3"
  compile group: "org.antlr", name: "antlr4-runtime", version: "4.5.3"
	
  compile project(':rosjava:rosjava_osgi')
  compile project(':smartspaces-bootstrap-core')

  compile('com.google.guava:guava:19.0') {
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
  }

  compile 'io.netty:netty:3.9.3.Final'

  compile 'com.fasterxml.jackson.core:jackson-core:2.6.1'
  compile 'com.fasterxml.jackson.core:jackson-databind:2.6.1'
  compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.6.1'
  
  compile('org.apache.httpcomponents:httpcore-osgi:4.4.5') {
	  transitive=false
    //exclude module: 'com.springsource.org.apache.commons.logging'
  }
  compile('org.apache.httpcomponents:httpclient-osgi:4.5.1') {
	  transitive=false
    //exclude module: 'com.springsource.org.apache.commons.logging'
  }
  compile('org.apache.httpcomponents:com.springsource.org.apache.httpcomponents.httpmime:4.1.1') { exclude module: 'com.springsource.org.apache.httpcomponents.httpcore' }

  runtime 'org.apache.commons:com.springsource.org.apache.commons.codec:1.4.0'

  compile(files("${project.getProperty('smartspaces.dependencies.home')}/expression/commons-ognl-4.0-SNAPSHOT.jar"))

  compile 'org.jboss.javassist:com.springsource.javassist:3.12.1.GA'

  compile 'org.apache.servicemix.bundles:org.apache.servicemix.bundles.jdom:2.0.6_1'

  compile 'org.apache.commons:com.springsource.org.apache.commons.logging:1.1.1'

  compile 'joda-time:joda-time:2.9.9'
  
  compile 'org.eclipse.paho:org.eclipse.paho.client.mqttv3:1.1.0'
  
  compile 'io.reactivex.rxjava2:rxjava:2.0.1'

  compile 'javax.jmdns:jmdns:3.4.1'
  
  compile 'org.bouncycastle:bcprov-jdk15on:1.56'
  compile 'org.bouncycastle:bcpkix-jdk15on:1.56'
  
  provided "${project.ext.osgiContainerDependency}"
}

generateGrammarSource {
	arguments += ["-visitor", "-long-messages"]
}

test {
  testLogging {
    exceptionFormat = 'full'
  }
}

jar {
  manifest {
    version = osgiVersion
    symbolicName = 'smartspaces'

    instruction 'Export-Package',
        'io.smartspaces.*'

    instruction 'Import-Package',
        'org.apache.commons.ognl.*;resolution:="optional"',
        'org.apache.http.*;resolution:="optional"',
        'org.jdom2.*;resolution:="optional"',
        'org.jboss.netty.handler.codec.http;resolution:="optional"',
        'org.jboss.netty.bootstrap;resolution:="optional"',
        'com.fasterxml.jackson.*;resolution:="optional"',
        'org.apache.commons.net.ntp;resolution:="optional"',
        'org.apache.commons.net.telnet;resolution:="optional"',
        'org.ros.*;resolution:="optional"',
        'org.joda.*;resolution:="optional"',
        'org.eclipse.paho.client.mqttv3.*;resolution:="optional"',
        'javassist.*;resolution:="optional"',
        'io.smartspaces.system.bootstrap.osgi;resolution:="optional"',
        'com.google.common;resolution:="optional"',
        'rx;resolution:="optional"',
        'org.bouncycastle;resolution:="optional"',
        'org.osgi.*;resolution:="optional"',
        '*'
  }
}
